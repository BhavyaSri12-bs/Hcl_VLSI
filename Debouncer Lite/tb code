`timescale 1ns/1ps
module tb_DebouncerLite;

    reg clk;
    reg rst;
    reg noisy_in;
    wire clean_out;

    // Instantiate the DUT
    DebouncerLite #(3) dut (
        .clk(clk),
        .rst(rst),
        .noisy_in(noisy_in),
        .clean_out(clean_out)
    );

    // Clock generator: 10ns period
    initial clk = 0;
    always #5 clk = ~clk;

    initial begin
        $dumpfile("debouncer_wave.vcd");
        $dumpvars(0, tb_DebouncerLite);

        $monitor("Time=%0t | noisy_in=%b | clean_out=%b", $time, noisy_in, clean_out);

        // Reset
        rst = 1; noisy_in = 0;
        #15 rst = 0;

        // Simulate bouncing input: 101010 before stable high
        noisy_in = 1; #10;
        noisy_in = 0; #10;
        noisy_in = 1; #10;
        noisy_in = 0; #10;
        noisy_in = 1; #50;  // finally stays high

        // Hold stable high long enough
        #50;

        // Now simulate bouncing back to low
        noisy_in = 0; #10;
        noisy_in = 1; #10;
        noisy_in = 0; #10;
        noisy_in = 1; #10;
        noisy_in = 0; #50;  // finally stays low

        #50;

        $finish;
    end

endmodule
